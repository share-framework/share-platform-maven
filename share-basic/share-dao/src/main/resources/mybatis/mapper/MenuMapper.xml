<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.andot.share.basic.dao.MenuMapper">

    <resultMap id="menuMap" type="org.andot.share.basic.entity.AnMenu">
        <id column="menu_id" property="menuId" javaType="long" jdbcType="BIGINT"></id>
        <result column="menu_name" property="menuName" javaType="string" jdbcType="VARCHAR"></result>
        <result column="menu_code" property="menuCode" javaType="string" jdbcType="VARCHAR"></result>
        <result column="menu_url" property="menuUrl" javaType="string" jdbcType="VARCHAR"></result>
        <result column="menu_type" property="menuType" javaType="int" jdbcType="INTEGER"></result>
        <result column="menu_parent_code" property="menuParentCode" javaType="string" jdbcType="VARCHAR"></result>
        <result column="menu_icon" property="menuIcon" javaType="string" jdbcType="VARCHAR"></result>
        <result column="app_system_id" property="appSystemId" javaType="long" jdbcType="BIGINT"></result>
        <result column="order_code" property="orderCode" javaType="int" jdbcType="INTEGER"></result>
        <result column="disabled" property="disabled" javaType="boolean" jdbcType="TINYINT"></result>
        <result column="create_time" property="createTime" javaType="java.util.Date" jdbcType="TIMESTAMP"></result>
        <result column="update_time" property="updateTime" javaType="java.util.Date" jdbcType="TIMESTAMP"></result>
        <result column="delete_time" property="deleteTime" javaType="java.util.Date" jdbcType="TIMESTAMP"></result>
        <result column="create_person" property="createPerson" javaType="string" jdbcType="VARCHAR"></result>
        <result column="update_person" property="updatePerson" javaType="string" jdbcType="VARCHAR"></result>
        <result column="delete_person" property="deletePerson" javaType="string" jdbcType="VARCHAR"></result>
    </resultMap>

    <resultMap id="menuRolePermission" type="org.andot.share.basic.dto.MenuPermissionDTO">
        <id column="menu_id" property="menuId" javaType="long" jdbcType="BIGINT"></id>
        <result column="role_menu_id" property="roleMenuId" javaType="long" jdbcType="BIGINT"></result>
        <result column="menu_name" property="menuName" javaType="string" jdbcType="VARCHAR"></result>
        <result column="menu_code" property="menuCode" javaType="string" jdbcType="VARCHAR"></result>
        <result column="menu_parent_code" property="menuParentCode" javaType="string" jdbcType="VARCHAR"></result>
    </resultMap>

    <select id="getMenuListByUserId" parameterType="long" resultMap="menuMap">
        SELECT
            an_menu.*
        FROM
            an_menu
            JOIN role_menu ON an_menu.menu_code = role_menu.menu_code
            JOIN role_user ON role_menu.role_code = role_user.role_code
        <where>
            <if test="xNumber != null">
                AND role_user.x_number = #{xNumber}
            </if>
            <if test="appSystemId != null">
                AND an_menu.app_system_id = #{appSystemId}
            </if>
            AND an_menu.disabled = 0
            AND an_menu.menu_type != 3
        </where>
    </select>

    <select id="getMenuListByRoleCode" parameterType="long" resultMap="menuRolePermission">
        SELECT
            m.menu_id,
            m.menu_name,
            m.menu_code,
            m.menu_parent_code,
            IFNULL(rm.role_menu_id, 0) AS role_menu_id
        FROM an_menu AS m
        LEFT JOIN role_menu AS rm ON m.menu_code = rm.menu_code
        <where>
            <if test="appSystemId != null">
                AND m.app_system_id = #{appSystemId}
            </if>
            <if test="roleCode != null">
                AND rm.role_code = #{roleCode}
            </if>
            AND m.disabled = 0
            AND m.menu_type != 3
        </where>
    </select>

    <select id="getMenuListByRoleCodes" resultMap="menuRolePermission">
        SELECT
        m.menu_id,
        m.menu_name,
        m.menu_code,
        m.menu_parent_code,
        IFNULL(rm.role_menu_id, 0) AS role_menu_id
        FROM an_menu AS m
        LEFT JOIN role_menu AS rm ON m.menu_code = rm.menu_code
        <where>
            <if test="appSystemId != null">
                AND m.app_system_id = #{appSystemId}
            </if>
            <if test="roleCodes != null and roleCodes.size() > 0">
                <foreach collection="roleCodes" item="roleCode" open=" AND rm.role_code = (" separator="," close=") ">
                    #{roleCode}
                </foreach>
            </if>
            AND m.disabled = 0
            AND m.menu_type = 3
        </where>
    </select>
</mapper>